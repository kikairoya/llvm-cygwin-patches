name: Build LLVM
description: Build patched LLVM

inputs:
  llvm-path:
    description: Path to source tree
    required: true
  patch-path:
    description: Path to be used to clone patches
    required: true
  config-name:
    description: Build configuration name
    required: true
  cygwin-root:
    description: Cygwih root path
    reuqired: true
  build-project:
    description: Project root to build, relative to llvm-project
    required: true
  build-target:
    description: Target name to build, which is passed to ninja
    required: false
    default: ''
  build-name:
    description: Build name suffix
    required: true
  parallel-compile-jobs:
    description: LLVM_PARALLEL_COMPILE_JOBS
    required: false
  parallel-link-jobs:
    description: LLVM_PARALLEL_LINK_JOBS
    required: false
  extra-lit-opts:
    description: LIT_OPTS
    required: false
  install-prefix:
    description: PREFIX
    required: false
    default: '/'
  artifact-suffix:
    description: Additional suffix to artifact name
    required: false
    default: ''
  stage1-bindir:
    description: Prebuilt stage1 path
    required: false
    default: ''
  build-retention-days:
    required: false
    default: 0
  install-retention-days:
    required: false
    default: 0

outputs:
  build-name:
    description: Build identifier name
    value: ${{ inputs.build-project }}-${{ inputs.build-name }}
  build-artifact:
    description: ID of the uploaded build artifact
    value: ${{ steps.upload-build.outputs.artifact-id }}
  log-artifact:
    description: ID of the uploaded build-log artifact
    value: ${{ steps.upload-log.outputs.artifact-id }}
  install-artifact:
    description: ID of the uploaded install artifact
    value: ${{ steps.upload-install.outputs.artifact-id }}

runs:
  using: "composite"
  steps:
    - id: build
      name: build ${{ inputs.build-project }} ${{ inputs.config-name }}
      env:
        BUILD_NAME: ${{ inputs.build-name }}
        BUILD_TARGET: ${{ inputs.build-target }}
        CONFIG_NAME: ${{ inputs.config-name }}
        CYGWIN_ROOT: ${{ inputs.cygwin-root }}
        BUILD_PROJECT: ${{ inputs.build-project }}
        PARALLEL_COMPILE_JOBS: ${{ inputs.parallel-compile-jobs }}
        PARALLEL_LINK_JOBS: ${{ inputs.parallel-link-jobs }}
        LLVM_PATH: ${{ inputs.llvm-path }}
        PATCH_PATH: ${{ inputs.patch-path }}
        EXTRA_LIT_OPTS: ${{ inputs.extra-lit-opts }}
        STAGE1_BINDIR: ${{ inputs.stage1-bindir }}
        ACTION_PATH: ${{ github.action_path }}
      run: |
        ## Config, Build, Test
        . "$ACTION_PATH/do_build.sh"
      shell: bash

    - id: archive
      if: ${{ always() }}
      name: archive ${{ inputs.build-project }} ${{ inputs.config-name }}
      env:
        BUILD_NAME: ${{ inputs.build-name }}
        BUILD_PROJECT: ${{ inputs.build-project }}
        CYGWIN_ROOT: ${{ inputs.cygwin-root }}
      run: |
        . ${{ github.action_path }}/source_cygpath
        tar -cf build-$BUILD_PROJECT-$BUILD_NAME.tar build-$BUILD_PROJECT-$BUILD_NAME
      shell: bash

    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: ${{ always() && inputs.build-retention-days >= 0 }}
      id: upload-build
      with:
        name: build-artifact-${{ inputs.build-project }}-${{ inputs.build-target || 'all' }}-${{ inputs.config-name }}${{ inputs.artifact-suffix }}
        overwrite: true
        path: build-${{ inputs.build-project }}-${{ inputs.build-name }}.tar
        retention-days: ${{ inputs.build-retention-days }}

    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: ${{ always() }}
      id: upload-log
      with:
        name: build-log-${{ inputs.build-project }}-${{ inputs.build-target || 'all' }}-${{ inputs.config-name }}${{ inputs.artifact-suffix }}
        overwrite: true
        path: |
          buildlog-*.txt
          configlog-*.txt
          env-*.txt
          result-*.xml

    - id: install
      if: ${{ inputs.install-prefix != '/' && inputs.install-retention-days >= 0 }}
      name: install ${{ inputs.build-project }} ${{ inputs.config-name }}
      env:
        BUILD_NAME: ${{ inputs.build-name }}
        BUILD_PROJECT: ${{ inputs.build-project }}
        INSTALL_PREFIX: ${{ inputs.install-prefix }}
        CYGWIN_ROOT: ${{ inputs.cygwin-root }}
      run: |
        . ${{ github.action_path }}/source_cygpath
        rm -f build-$BUILD_PROJECT-$BUILD_NAME.tar

        echo "::group::Install"
        cmake --install build-$BUILD_PROJECT-$BUILD_NAME --prefix install/$INSTALL_PREFIX
        echo "::endgroup::"

        cd install
        find . -name '*.dll' | xargs -r chmod +x
        tar -cf package-$BUILD_PROJECT-$BUILD_NAME.tar *
        mv package-$BUILD_PROJECT-$BUILD_NAME.tar ..
      shell: bash

    - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
      if: ${{ inputs.install-prefix != '/' && inputs.install-retention-days >= 0 }}
      id: upload-install
      with:
        name: package-${{ inputs.build-project }}-${{ inputs.config-name }}${{ inputs.artifact-suffix }}
        path: package-${{ inputs.build-project }}-${{ inputs.build-name }}.tar
        retention-days: ${{ inputs.install-retention-days }}
