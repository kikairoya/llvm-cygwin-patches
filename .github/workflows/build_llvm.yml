name: Build LLVM
on:
  #schedule:
  #  - cron: '18 22 * * *'
  workflow_dispatch:
    inputs:
      upstream-branch:
        description: 'Upstream branch to build'
        type: string
        required: false
        default: 'main'
      patch-series:
        description: 'Patch series to apply'
        type: string
        required: false
        default: 'main'
      config:
        description: 'Build config script'
        type: string
        required: false
        default: 'clang-dylib'

jobs:
  select:
    runs-on: ubuntu-latest
    name: Select target
    outputs:
      upstream-branch: ${{ inputs.upstream-branch || 'main' }}
      patch-series: ${{ inputs.patch-series || inputs.upstream-branch || 'main' }}
      config: ${{ inputs.config || steps.selector.outputs.config }}

    steps:
      - id: selector
        env:
          SCHEDULE: ${{ github.event.schedule }}
        run: |
          case "$SCHEDULE" in
            '18'*)
              echo config=clang-dylib >> "$GITHUB_OUTPUT"
              ;;
            '')
              ;;
            *)
              false
              ;;
          esac
        shell: bash

  build:
    runs-on: windows-latest
    needs: select
    name: Build LLVM ${{ needs.select.outputs.upstream-branch }} ${{ needs.select.outputs.config }}
    concurrency:
      group: build-self-cygwin

    outputs:
      build-name: ${{ steps.build-llvm.outputs.build-name }}
      upstream-commit: ${{ steps.prepare-tree.outputs.upstream-commit }}
      patch-commit: ${{ steps.checkout-patch.outputs.commit }}

    steps:
      - run: git config --global core.autocrlf input

      - name: prepare patches
        id: checkout-patch
        uses: actions/checkout@v5
        with:
          path: patches

      - name: prepare Cygwin
        id: prepare-cygwin
        uses: ./patches/.github/actions/prepare-cygwin-root

      - name: prepare llvm tree
        id: prepare-tree
        uses: ./patches/.github/actions/patch-llvm
        with:
          remote-ref: ${{ needs.select.outputs.upstream-branch }}
          patch-series: ${{ needs.select.outputs.patch-series }}

      - name: build llvm
        id: build-llvm
        uses: ./patches/.github/actions/build-llvm
        env:
          LIT_OPTS: '--show-suites'
        with:
          config-name: ${{ needs.select.outputs.config }}
          parallel-compile-jobs: 3
          cygwin-root: ${{ steps.prepare-cygwin.outputs.root }}
          build-target: 'check'

  check:
    runs-on: windows-latest
    needs: [select, build]
    name: Check LLVM ${{ needs.select.outputs.upstream-branch }} ${{ needs.select.outputs.config }}
    concurrency:
      group: test-self-cygwin

    steps:
      - run: git config --global core.autocrlf input

      - name: prepare patches
        id: checkout-patch
        uses: actions/checkout@v5
        with:
          path: patches
          ref: ${{ needs.build.outputs.patch-commit }}

      - name: prepare Cygwin
        id: prepare-cygwin
        uses: ./patches/.github/actions/prepare-cygwin-root

      - name: prepare llvm tree
        id: prepare-tree
        uses: ./patches/.github/actions/patch-llvm
        with:
          patch-series: ${{ needs.select.outputs.patch-series }}
          remote-ref: ${{ needs.build.outputs.upstream-commit }}

      - uses: actions/download-artifact@v5
        with:
          name: build-artifact-${{ needs.select.outputs.config }}

      - name: check llvm dry-run
        id: check-0
        env:
          BUILD_NAME: ${{ needs.build.outputs.build-name }}
          CONFIG: ''
          CYGWINROOT: ${{ steps.prepare-cygwin.outputs.root }}
        run: ./patches/scripts/runtest.sh
        shell: bash

      - name: check llvm 1st
        id: check-1
        env:
          BUILD_NAME: ${{ needs.build.outputs.build-name }}
          CONFIG: 1-${{ needs.select.outputs.config }}
          CYGWINROOT: ${{ steps.prepare-cygwin.outputs.root }}
          TOTAL_TIMEOUT_MINUTES: 330
          PER_TEST_TIMEOUT: 180
        run: ./patches/scripts/runtest.sh
        shell: bash

      - name: check llvm 2nd
        env:
          BUILD_NAME: ${{ needs.build.outputs.build-name }}
          CONFIG: 2-${{ needs.select.outputs.config }}
          CYGWINROOT: ${{ steps.prepare-cygwin.outputs.root }}
          TOTAL_TIMEOUT_MINUTES: 330
          PER_TEST_TIMEOUT: 180
        run: ./patches/scripts/runtest.sh
        shell: bash

      - uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: test-log
          overwrite: true
          path: |
            ${{ github.workspace }}/*-${{ needs.build.outputs.build-name }}.xml
            ${{ github.workspace }}/*-${{ needs.build.outputs.build-name }}.txt
