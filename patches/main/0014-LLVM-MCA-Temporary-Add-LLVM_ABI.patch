From f2e6f6f6c0274e11dc7188b6b00b7a3636dd1792 Mon Sep 17 00:00:00 2001
From: kikairoya <kikairoya@gmail.com>
Date: Sat, 14 Jun 2025 08:14:26 +0900
Subject: [PATCH 14/16] [LLVM][MCA](Temporary) Add LLVM_ABI

---
 llvm/include/llvm/MCA/Support.h | 9 +++++----
 llvm/lib/MCA/Support.cpp        | 2 ++
 2 files changed, 7 insertions(+), 4 deletions(-)

diff --git a/llvm/include/llvm/MCA/Support.h b/llvm/include/llvm/MCA/Support.h
index ce2ac9b4b6cd..4fe24ecd2a0f 100644
--- a/llvm/include/llvm/MCA/Support.h
+++ b/llvm/include/llvm/MCA/Support.h
@@ -27,21 +27,22 @@ namespace mca {
 template <typename T>
 class InstructionError : public ErrorInfo<InstructionError<T>> {
 public:
-  static char ID;
+  LLVM_ABI static char ID;
   std::string Message;
   const T &Inst;
 
-  InstructionError(std::string M, const T &MCI)
+  LLVM_ABI InstructionError(std::string M, const T &MCI)
       : Message(std::move(M)), Inst(MCI) {}
 
-  void log(raw_ostream &OS) const override { OS << Message; }
+  LLVM_ABI void log(raw_ostream &OS) const override { OS << Message; }
 
-  std::error_code convertToErrorCode() const override {
+  LLVM_ABI std::error_code convertToErrorCode() const override {
     return inconvertibleErrorCode();
   }
 };
 
 template <typename T> char InstructionError<T>::ID;
+extern template class LLVM_TEMPLATE_ABI InstructionError<MCInst>;
 
 /// This class represents the number of cycles per resource (fractions of
 /// cycles).  That quantity is managed here as a ratio, and accessed via the
diff --git a/llvm/lib/MCA/Support.cpp b/llvm/lib/MCA/Support.cpp
index f8b8a2d129c1..2e39e44f41eb 100644
--- a/llvm/lib/MCA/Support.cpp
+++ b/llvm/lib/MCA/Support.cpp
@@ -107,5 +107,7 @@ double computeBlockRThroughput(const MCSchedModel &SM, unsigned DispatchWidth,
   return Max;
 }
 
+template class LLVM_EXPORT_TEMPLATE InstructionError<MCInst>;
+
 } // namespace mca
 } // namespace llvm
-- 
2.51.0

