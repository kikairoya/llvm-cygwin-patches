From bf1875229b3083276bea7284da33fac761988a38 Mon Sep 17 00:00:00 2001
From: Jeremy Drake <github@jdrake.com>
Date: Sat, 13 Sep 2025 12:59:19 -0700
Subject: [PATCH 02/37] Misc fixes while testting 32-bit

Don't add --disable-high-entropy-va on 32-bit, it's only supported on
64-bit

For executables, add --large-address-aware for 32-bit, and --tsaware for
all, to match gcc.

Map -rdynamic to --export-all-symbols to match https://cygwin.com/cgit/cygwin-packages/gcc/tree/0004-Cygwin-add-dummy-pthread-tsaware-and-large-address-a.patch
---
 clang/lib/Driver/ToolChains/Cygwin.cpp | 9 ++++++++-
 1 file changed, 8 insertions(+), 1 deletion(-)

diff --git a/clang/lib/Driver/ToolChains/Cygwin.cpp b/clang/lib/Driver/ToolChains/Cygwin.cpp
index 079911b0f0ac..b489ff39294f 100644
--- a/clang/lib/Driver/ToolChains/Cygwin.cpp
+++ b/clang/lib/Driver/ToolChains/Cygwin.cpp
@@ -207,6 +207,13 @@ void cygwin::Linker::ConstructJob(Compilation &C, const JobAction &JA,
     CmdArgs.push_back("-Bdynamic");
 
   CmdArgs.push_back("--dll-search-prefix=cyg");
+  if (Args.hasArg(options::OPT_rdynamic))
+    CmdArgs.push_back("--export-all-symbols");
+  if (!Args.hasArg(options::OPT_shared) && !Args.hasArg(options::OPT_mdll)) {
+    if (ToolChain.getTriple().isArch32Bit())
+      CmdArgs.push_back("--large-address-aware");
+    CmdArgs.push_back("--tsaware");
+  }
 
   CmdArgs.push_back("-o");
   const char *OutputFile = Output.getFilename();
@@ -283,7 +290,7 @@ void cygwin::Linker::ConstructJob(Compilation &C, const JobAction &JA,
         StringRef(Arg) == "--disable-nxcompat")
       saw_nxcompat = true;
   }
-  if (!saw_high_entropy_va)
+  if (!saw_high_entropy_va && ToolChain.getTriple().isArch64Bit())
     CmdArgs.push_back("--disable-high-entropy-va");
   if (!saw_nxcompat)
     CmdArgs.push_back("--disable-nxcompat");
-- 
2.51.0

