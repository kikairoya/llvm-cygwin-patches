From 555d6fe945e8fec6de3cbabd4099a28694b8c4f6 Mon Sep 17 00:00:00 2001
From: kikairoya <kikairoya@gmail.com>
Date: Fri, 19 Sep 2025 19:04:00 +0900
Subject: [PATCH 06/15] [compiler-rt][orc] Add Cygwin support

---
 compiler-rt/lib/orc/CMakeLists.txt      |  2 +-
 compiler-rt/lib/orc/coff_platform.cpp   |  2 +-
 compiler-rt/lib/orc/elfnix_platform.cpp | 23 +++++++++++++++++++----
 3 files changed, 21 insertions(+), 6 deletions(-)

diff --git a/compiler-rt/lib/orc/CMakeLists.txt b/compiler-rt/lib/orc/CMakeLists.txt
index b8d1b03b788c..50b7c7d6f935 100644
--- a/compiler-rt/lib/orc/CMakeLists.txt
+++ b/compiler-rt/lib/orc/CMakeLists.txt
@@ -84,7 +84,7 @@ if (APPLE)
     LINK_LIBS ${ORC_LINK_LIBS}
     PARENT_TARGET orc)
 else() # not Apple
-  if (WIN32)
+  if (WIN32 OR CYGWIN)
     set(ORC_BUILD_TYPE STATIC)
 
     set(ORC_IMPL_HEADERS
diff --git a/compiler-rt/lib/orc/coff_platform.cpp b/compiler-rt/lib/orc/coff_platform.cpp
index 4cce20e1323f..d200ef9b5e5c 100644
--- a/compiler-rt/lib/orc/coff_platform.cpp
+++ b/compiler-rt/lib/orc/coff_platform.cpp
@@ -785,7 +785,7 @@ ORC_RT_INTERFACE void __stdcall __orc_rt_coff_cxx_throw_exception(
       reinterpret_cast<ULONG_PTR>(BaseAddr),
   };
   RaiseException(EH_EXCEPTION_NUMBER, EXCEPTION_NONCONTINUABLE,
-                 _countof(parameters), parameters);
+                 sizeof(parameters) / sizeof(parameters[0]), parameters);
 }
 
 //------------------------------------------------------------------------------
diff --git a/compiler-rt/lib/orc/elfnix_platform.cpp b/compiler-rt/lib/orc/elfnix_platform.cpp
index 33b09b948b87..76c2526d46e4 100644
--- a/compiler-rt/lib/orc/elfnix_platform.cpp
+++ b/compiler-rt/lib/orc/elfnix_platform.cpp
@@ -47,7 +47,10 @@ __unw_remove_dynamic_eh_frame_section(const void *) ORC_RT_WEAK_IMPORT;
 namespace {
 
 struct TLSInfoEntry {
-  unsigned long Key = 0;
+  union {
+    pthread_key_t Key;
+    unsigned long Dummy;
+  };
   unsigned long DataAddress = 0;
 };
 
@@ -778,15 +781,27 @@ ORC_RT_INTERFACE ptrdiff_t ___orc_rt_elfnix_tlsdesc_resolver_impl(
 
 ORC_RT_INTERFACE orc_rt_WrapperFunctionResult
 __orc_rt_elfnix_create_pthread_key(char *ArgData, size_t ArgSize) {
-  return WrapperFunction<SPSExpected<uint64_t>(void)>::handle(
+  return WrapperFunction<SPSExpected<unsigned long>(void)>::handle(
              ArgData, ArgSize,
-             []() -> Expected<uint64_t> {
+             []() -> Expected<unsigned long> {
                pthread_key_t Key;
                if (int Err = pthread_key_create(&Key, destroyELFNixTLVMgr)) {
                  __orc_rt_log_error("Call to pthread_key_create failed");
                  return make_error<StringError>(strerror(Err));
                }
-               return static_cast<uint64_t>(Key);
+               if constexpr (std::is_convertible_v<pthread_key_t,
+                                                   unsigned long> &&
+                             sizeof(pthread_key_t) <= sizeof(unsigned long)) {
+                 return Key;
+               } else {
+                 static_assert(sizeof(pthread_key_t) <= sizeof(unsigned long));
+                 static_assert(std::is_trivially_copyable_v<pthread_key_t>);
+                 unsigned long Ret = 0;
+                 std::copy_n(reinterpret_cast<const unsigned char *>(&Key),
+                             sizeof(Key),
+                             reinterpret_cast<unsigned char *>(Ret));
+                 return Ret;
+               }
              })
       .release();
 }
-- 
2.51.0

