From 49068bab99b2398592b7ea9f768c26725bc36ca5 Mon Sep 17 00:00:00 2001
From: kikairoya <kikairoya@gmail.com>
Date: Sat, 24 May 2025 16:22:47 +0900
Subject: [PATCH 34/37] [Interpreter][Cygwin] Search symbol from cygwin1.dll
 prior to msvcrt.dll

---
 llvm/lib/Support/Unix/DynamicLibrary.inc | 18 ++++++++++++++++--
 1 file changed, 16 insertions(+), 2 deletions(-)

diff --git a/llvm/lib/Support/Unix/DynamicLibrary.inc b/llvm/lib/Support/Unix/DynamicLibrary.inc
index b6f8e38a6612..c4e9b934fb1c 100644
--- a/llvm/lib/Support/Unix/DynamicLibrary.inc
+++ b/llvm/lib/Support/Unix/DynamicLibrary.inc
@@ -33,8 +33,9 @@ void *DynamicLibrary::HandleSet::DLOpen(const char *File, std::string *Err) {
   }
 
 #ifdef __CYGWIN__
-  // Cygwin searches symbols only in the main
-  // with the handle of dlopen(NULL, RTLD_GLOBAL).
+  // On Cygwin environment, calling dlsym with handle of main program doesn't
+  // search symbols from loaded DLLs. That differs from other Unix-like systems,
+  // so RTLD_DEFAULT is required instead of process handle.
   if (!File)
     Handle = RTLD_DEFAULT;
 #endif
@@ -45,6 +46,19 @@ void *DynamicLibrary::HandleSet::DLOpen(const char *File, std::string *Err) {
 void DynamicLibrary::HandleSet::DLClose(void *Handle) { ::dlclose(Handle); }
 
 void *DynamicLibrary::HandleSet::DLSym(void *Handle, const char *Symbol) {
+#ifdef __CYGWIN__
+  // On Cygwin environment, passing RTLD_DEFAULT doesn't care of DLL search
+  // order. All of Cygwin programs load cygwin1.dll and msvcrt.dll but some
+  // symbols are defined on both DLLs (e.g. 'exit'). Searching manually from
+  // cygwin1.dll first ensures such duplicated symbols are picked from
+  // cygwin1.dll properly.
+  // FIXME: DLL name may differ (e.g. msys-2.0.dll).
+  if (Handle == RTLD_DEFAULT) {
+    void *CygDLL = ::dlopen("cygwin1.dll", RTLD_NOLOAD);
+    void *F = ::dlsym(CygDLL, Symbol);
+    return F ? F : ::dlsym(RTLD_DEFAULT, Symbol);
+  }
+#endif
   return ::dlsym(Handle, Symbol);
 }
 
-- 
2.51.1

