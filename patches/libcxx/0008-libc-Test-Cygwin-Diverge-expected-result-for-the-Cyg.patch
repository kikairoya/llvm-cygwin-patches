From c9ceb901901633746e540d6c2fe2b5beaa6f73a8 Mon Sep 17 00:00:00 2001
From: kikairoya <kikairoya@gmail.com>
Date: Sat, 7 Jun 2025 17:45:43 +0900
Subject: [PATCH 08/15] [libc++][Test][Cygwin] Diverge expected result for the
 Cygwin target (part 1/5 - test setup)

---
 libcxx/CMakeLists.txt                | 4 +++-
 libcxx/include/__config              | 2 ++
 libcxx/utils/libcxx/test/features.py | 4 ++--
 3 files changed, 7 insertions(+), 3 deletions(-)

diff --git a/libcxx/CMakeLists.txt b/libcxx/CMakeLists.txt
index 0e5b799051d7..5755dd2a81e6 100644
--- a/libcxx/CMakeLists.txt
+++ b/libcxx/CMakeLists.txt
@@ -524,7 +524,9 @@ function(cxx_add_basic_build_flags target)
 
   # Build with -fsized-deallocation, which is default in recent versions of Clang.
   # TODO(LLVM 21): This can be dropped once we only support Clang >= 19.
-  target_add_compile_flags_if_supported(${target} PRIVATE -fsized-deallocation)
+  if (NOT CYGWIN)
+    target_add_compile_flags_if_supported(${target} PRIVATE -fsized-deallocation)
+  endif()
 
   # Let the library headers know they are currently being used to build the
   # library.
diff --git a/libcxx/include/__config b/libcxx/include/__config
index 495f7654d5cd..f64b82ed4afd 100644
--- a/libcxx/include/__config
+++ b/libcxx/include/__config
@@ -1034,6 +1034,8 @@ typedef __char32_t char32_t;
 #    else
 #      define _LIBCPP_HAS_C8RTOMB_MBRTOC8 0
 #    endif
+#  elif defined(__CYGWIN__) && defined(__cpp_char8_t)
+#    define _LIBCPP_HAS_C8RTOMB_MBRTOC8 1
 #  else
 #    define _LIBCPP_HAS_C8RTOMB_MBRTOC8 0
 #  endif
diff --git a/libcxx/utils/libcxx/test/features.py b/libcxx/utils/libcxx/test/features.py
index 0a277718b222..c9a2418aad56 100644
--- a/libcxx/utils/libcxx/test/features.py
+++ b/libcxx/utils/libcxx/test/features.py
@@ -224,7 +224,7 @@ DEFAULT_FEATURES = [
         name="win32-broken-utf8-wchar-ctype",
         when=lambda cfg: not "_LIBCPP_HAS_LOCALIZATION" in compilerMacros(cfg)
         or compilerMacros(cfg)["_LIBCPP_HAS_LOCALIZATION"] == "1"
-        and "_WIN32" in compilerMacros(cfg)
+        and ("_WIN32" in compilerMacros(cfg) or "__CYGWIN__" in compilerMacros(cfg))
         and not programSucceeds(
             cfg,
             """
@@ -241,7 +241,7 @@ DEFAULT_FEATURES = [
     # https://developercommunity.visualstudio.com/t/printf-formatting-with-g-outputs-too/1660837
     Feature(
         name="win32-broken-printf-g-precision",
-        when=lambda cfg: "_WIN32" in compilerMacros(cfg)
+        when=lambda cfg: ("_WIN32" in compilerMacros(cfg) or "__CYGWIN__" in compilerMacros(cfg))
         and not programSucceeds(
             cfg,
             """
-- 
2.51.1

