From 0fb7b0f842f7d96860fd37d15adee3a50de15e9a Mon Sep 17 00:00:00 2001
From: kikairoya <kikairoya@gmail.com>
Date: Sat, 7 Jun 2025 17:51:03 +0900
Subject: [PATCH 09/15] [libc++][Test][Cygwin] Diverge expected result for the
 Cygwin target (part 2/5 - misc)

---
 libcxx/test/libcxx/gdb/gdb_pretty_printer_test.sh.cpp       | 1 +
 .../fs.op.funcs/fs.op.proximate/proximate.pass.cpp          | 6 ++++++
 .../fs.op.funcs/fs.op.remove_all/toctou.pass.cpp            | 1 +
 .../futures/futures.async/thread_create_failure.pass.cpp    | 2 +-
 4 files changed, 9 insertions(+), 1 deletion(-)

diff --git a/libcxx/test/libcxx/gdb/gdb_pretty_printer_test.sh.cpp b/libcxx/test/libcxx/gdb/gdb_pretty_printer_test.sh.cpp
index f5a878582666..e9c59a4328cc 100644
--- a/libcxx/test/libcxx/gdb/gdb_pretty_printer_test.sh.cpp
+++ b/libcxx/test/libcxx/gdb/gdb_pretty_printer_test.sh.cpp
@@ -23,6 +23,7 @@
 
 // This test doesn't work as such on Windows.
 // UNSUPPORTED: windows
+// UNSUPPORTED: cygwin
 
 // RUN: %{cxx} %{flags} %s -o %t.exe %{compile_flags} -g %{link_flags}
 // Ensure locale-independence for unicode tests.
diff --git a/libcxx/test/std/input.output/filesystems/fs.op.funcs/fs.op.proximate/proximate.pass.cpp b/libcxx/test/std/input.output/filesystems/fs.op.funcs/fs.op.proximate/proximate.pass.cpp
index ef00a3f84396..f897db3273c3 100644
--- a/libcxx/test/std/input.output/filesystems/fs.op.funcs/fs.op.proximate/proximate.pass.cpp
+++ b/libcxx/test/std/input.output/filesystems/fs.op.funcs/fs.op.proximate/proximate.pass.cpp
@@ -75,6 +75,7 @@ static void basic_test() {
       {"a", "/", relative_cwd / "a"},
       {"a/b", "/", relative_cwd / "a/b"},
       {"a", "/net", ".." / relative_cwd / "a"},
+#ifndef __CYGWIN__ // Cygwin treats ^// as a network path
 #ifdef _WIN32
       {"//foo/", "//foo", "//foo/"},
       {"//foo", "//foo/", "//foo"},
@@ -84,6 +85,7 @@ static void basic_test() {
 #endif
       {"//foo", "//foo", "."},
       {"//foo/", "//foo/", "."},
+#endif
 #ifdef _WIN32
       {"//foo", "a", "//foo"},
       {"//foo/a", "//bar", "//foo/a"},
@@ -103,12 +105,14 @@ static void basic_test() {
       {"X:a", "Y:/b", "X:a"},
       {"X:a", "Y:b", "X:a"},
 #else
+#ifndef __CYGWIN__
       {"//foo", "a", dot_dot_to_root / "../foo"},
       {"//foo/a", "//bar", "../foo/a"},
       {"//foo/a", "//bar/", "../foo/a"},
       {"//foo/a", "b", dot_dot_to_root / "../foo/a"},
       {"//foo/a", "/b", "../foo/a"},
       {"//foo/a", "//bar/b", "../../foo/a"},
+#endif
       {"X:/a", "X:/b", "../a"},
       {"X:/a", "X:b", "../X:/a"},
       {"X:/a", "Y:/a", "../../X:/a"},
@@ -123,7 +127,9 @@ static void basic_test() {
       {"a", "a", "."},
       {"a/b", "a/b", "."},
       {"a/b/c/", "a/b/c/", "."},
+#ifndef __CYGWIN__
       {"//foo/a/b", "//foo/a/b", "."},
+#endif
       {"/a/d", "/a/b/c", "../../d"},
       {"/a/b/c", "/a/d", "../b/c"},
       {"a/b/c", "a", "b/c"},
diff --git a/libcxx/test/std/input.output/filesystems/fs.op.funcs/fs.op.remove_all/toctou.pass.cpp b/libcxx/test/std/input.output/filesystems/fs.op.funcs/fs.op.remove_all/toctou.pass.cpp
index d8a8d83e8af3..0e116c0ee51c 100644
--- a/libcxx/test/std/input.output/filesystems/fs.op.funcs/fs.op.remove_all/toctou.pass.cpp
+++ b/libcxx/test/std/input.output/filesystems/fs.op.funcs/fs.op.remove_all/toctou.pass.cpp
@@ -34,6 +34,7 @@
 
 // Windows doesn't support the necessary APIs to mitigate this issue.
 // XFAIL: target={{.+}}-windows-{{.+}}
+// XFAIL: cygwin
 
 #include <cstdio>
 #include <filesystem>
diff --git a/libcxx/test/std/thread/futures/futures.async/thread_create_failure.pass.cpp b/libcxx/test/std/thread/futures/futures.async/thread_create_failure.pass.cpp
index 70009589e985..177f29c7875a 100644
--- a/libcxx/test/std/thread/futures/futures.async/thread_create_failure.pass.cpp
+++ b/libcxx/test/std/thread/futures/futures.async/thread_create_failure.pass.cpp
@@ -14,7 +14,7 @@
 // UNSUPPORTED: c++03
 
 // There is no way to limit the number of threads on windows
-// UNSUPPORTED: windows
+// UNSUPPORTED: windows, cygwin
 
 // AIX, macOS and FreeBSD seem to limit the number of processes, not threads via RLIMIT_NPROC
 // XFAIL: target={{.+}}-aix{{.*}}
-- 
2.51.0

