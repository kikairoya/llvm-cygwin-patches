name: Cross build Cygwin binary
on:
  #schedule:
  #  - cron: '18 12 * * *'
  workflow_dispatch:
    inputs:
      upstream-branch:
        description: 'Upstream branch to build'
        type: string
        required: false
        default: 'main'
      patch-series-host:
        description: 'Patch series to apply for host tool'
        type: string
        required: false
        default: 'cross'
      patch-series:
        description: 'Patch series to apply for target tool'
        type: string
        required: false
        default: 'main'
      config-host:
        description: 'Build config script for host tool'
        type: string
        required: false
        default: 'linux-clang'
      config:
        description: 'Build config script for target tool'
        type: string
        required: false
        default: 'cross-clang-dylib'

jobs:
  select:
    runs-on: ubuntu-latest
    name: Select target
    outputs:
      upstream-branch: ${{ inputs.upstream-branch || 'main' }}
      patch-series-host: ${{ inputs.patch-series-host || 'cross' }}
      patch-series: ${{ inputs.patch-series || inputs.upstream-branch || 'main' }}
      config-host: ${{ inputs.config-host || 'linux-clang' }}
      configs: ${{ steps.selector.outputs.configs }}

    steps:
      - id: selector
        env:
          CONFIG: ${{ inputs.config }}
        run: |
          if [ -n "$CONFIG" ]; then
            echo "configs=[\"$CONFIG\"]" >> "$GITHUB_OUTPUT"
          else
            echo "configs=[\"cross-clang-static\", \"cross-clang-dylib\", \"cross-clang-shared\", \"cross-clang-builddylib\"]" >> "$GITHUB_OUTPUT"
          fi
        shell: bash

  prepare-host:
    runs-on: ubuntu-latest
    name: Prepare host LLVM
    needs: select
    concurrency:
      group: build-self-linux

    outputs:
      upstream-commit: ${{ steps.prepare-tree.outputs.upstream-commit }}

    steps:
      - name: prepare patches
        uses: actions/checkout@v5
        with:
          path: patches

      - name: prepare llvm tree
        id: prepare-tree
        uses: ./patches/.github/actions/patch-llvm
        with:
          remote-ref: ${{ needs.select.outputs.upstream-branch }}
          patch-series: ${{ needs.select.outputs.patch-series-host }}

      - name: build llvm
        id: build-llvm
        uses: ./patches/.github/actions/build-llvm
        with:
          config-name: ${{ needs.select.outputs.config-host }}

      - id: install
        env:
          BUILD_NAME: ${{ steps.build-llvm.outputs.build-name }}
        run: |
          cmake --install build-$BUILD_NAME --prefix $PWD/llvm-head
          tar caf llvm-head.tar llvm-head
        shell: bash

      - uses: actions/upload-artifact@v4
        with:
          name: host-tool
          overwrite: true
          retention-days: 1
          path: |
            llvm-head.tar

  build:
    runs-on: ubuntu-latest
    name: Cross build LLVM ${{ needs.select.outputs.upstream-branch }} ${{ matrix.config }}
    needs: [select, prepare-host]
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        config: ${{ fromJSON(needs.select.outputs.configs) }}

    steps:
      - name: prepare patches
        id: checkout-patch
        uses: actions/checkout@v5
        with:
          path: patches

      - uses: actions/download-artifact@v5
        with:
          name: host-tool

      - run: |
          tar xf llvm-head.tar
          rm llvm-head.tar
        shell: bash

      - name: prepare Cygwin
        id: prepare-cygwin
        uses: ./patches/.github/actions/prepare-cygwin-root

      - name: prepare llvm tree
        id: prepare-tree
        uses: ./patches/.github/actions/patch-llvm
        with:
          remote-ref: ${{ needs.prepare-host.outputs.upstream-commit }}
          patch-series: ${{ needs.select.outputs.patch-series }}

      - name: build llvm
        id: build-llvm
        uses: ./patches/.github/actions/build-llvm
        env:
          CROSS_SYSROOT: ${{ steps.prepare-cygwin.outputs.root }}
          HOST_TOOLCHAIN: ${{ format('{0}/llvm-head/bin', github.workspace) }}
        with:
          config-name: ${{ matrix.config }}
